---
- hosts: localhost
  gather_facts: no
  tasks:
  - import_tasks: tasks/provision_instance.yml
    vars:
      image_prefix: "{{ openshift_azure_input_image_prefix }}"
      image_resource_group: "{{ openshift_azure_input_image_ns }}"
      data_disks:
      - managed_disk_type: Standard_LRS
        disk_size_gb: 100
        lun: 0

  - set_fact:
      openshift_node_bootstrap: True

- hosts: nodes
  tasks:
  - set_fact:
      openshift_deployment_type: "{{ 'openshift-enterprise' if ansible_distribution == 'RedHat' else 'origin' }}"
      openshift_enable_origin_repo: False
      openshift_node_bootstrap: True
      skip_node_svc_handlers: True
      openshift_master_fire_handlers: False
      openshift_master_systemd_enable: False
      openshift_additional_repos: "{{ azure_node_repos[ansible_distribution] }}"

  - set_fact:
      openshift_additional_repos: "{{ openshift_additional_repos + [{'name': 'install_repo', 'baseurl': openshift_azure_install_repo, 'enabled': true, 'gpgcheck': false}] }}"
    when: openshift_azure_install_repo is defined and openshift_azure_install_repo

  - yum:
      name: centos-release-paas-common
      state: present
    when: ansible_distribution == "CentOS"

  - import_tasks: tasks/yum_certs.yml

  - import_role:
      name: os_update_latest
    vars:
      os_update_latest_reboot: True

- import_playbook: ../../openshift-node/private/image_prep.yml

- hosts: nodes
  tasks:
  - import_role:
      name: openshift_master_facts

  - import_role:
      name: openshift_master
      tasks_from: systemd_units.yml

  - meta: flush_handlers

  - import_tasks: tasks/remove_yum.yml

  - yum:
      list: installed
    register: yum

  - command: waagent -deprovision+user -force
    args:
      chdir: /

- hosts: localhost
  gather_facts: no
  tasks:
  - set_fact:
      openshift_rpm: "{{ hostvars[groups['nodes'][0]]['yum'].results | selectattr('name', 'match', '^(origin|atomic-openshift)$') | first }}"

  - import_tasks: tasks/create_image_from_vm.yml
    vars:
      image_prefix: "{{ openshift_azure_output_image_prefix }}-{{ openshift_rpm.version | regex_replace('^(\\d+\\.\\d+).*', '\\1') }}"
      image_resource_group: "{{ openshift_azure_output_image_ns }}"
      image_tags:
        base_image: "{{ input_image.stdout | from_json }}"
        kernel: "{{ hostvars[groups['nodes'][0]]['ansible_kernel'] }}"
        openshift: "{{ openshift_rpm.name }}-{{ openshift_rpm.version }}-{{ openshift_rpm.release }}.{{ openshift_rpm.arch }}"

- import_playbook: deprovision.yml
